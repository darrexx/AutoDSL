import "platform:/resource/info.scce.cinco.product.autoDSL/model/Check.mgl" as check

@primeviewer
@style("model/AutoDSL.style")
graphModel Rule {
	package info.scce.cinco.product.autoDSL.rule
	nsURI "http://cinco.scce.info/product/rule"
	diagramExtension "rule"
	
	//abstract container DummyContainer extends SIB { } // unused. required for #15357 (DIME)

	// super type for Input, Output, and TypeIO
	abstract container IO {
		/*containableElements (
			DummyContainer[0,*]
		)*/
	} 

	abstract container Input extends IO {
		//@readOnly
		@mcam_label
		attr EString as name := "input"
	}

	abstract container InputStatic extends Input { }

	abstract container InputPort extends Input {
		attr EBoolean as isList := "false"
	}
	
	enum PrimitiveType {
		Text
		Number
		Boolean
		Timestamp
	}
	
	@style(inputPort, "${name}", "${isList ? '[' : ''}", "${dataType}", "${isList ? ']' : ''}")
	@disable(move,resize)
	//@contextMenuAction("info.scce.dime.process.actions.PrimitivePortToStatic")
	//@postCreate("info.scce.dime.process.hooks.InputHook")
	//@preDelete("info.scce.dime.process.hooks.CIOPreDelete")
	//@palette("Ports")
	@icon("icons/inputPort.png")
	container PrimitiveInputPort extends InputPort {
		attr PrimitiveType as dataType
		//incomingEdges ({PrimitiveRead,PrimitiveDirectDataFlow}[0,1])	
	}

	abstract edge InputArrow{
	}
	
	@style(labeledArrow, "${label}")
	edge NumberArrow extends InputArrow{
		final attr EString as label := "number"
	}
	
	@style(labeledArrow, "${label}")
	edge BooleanArrow extends InputArrow{
		final attr EString as label := "boolean"
	}
	
	abstract node Value{
		attr EString as label
	}

	abstract node NumberValue extends Value{
		
	}

	abstract node BooleanValue extends Value{
		
	}
	
	@style(labeledCircle, "${label}")
	node GetSpeed extends NumberValue{
		outgoingEdges(NumberArrow[1,1])
	}
	
	@style(labeledCircle, "${label}")
	node SetSpeed extends NumberValue{
		incomingEdges(NumberArrow[1,1])
	}

	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateAddition")
	@style(operator, "+")
	container Addition{
		incomingEdges(NumberArrow[0,*])
		outgoingEdges(NumberArrow[1,1])
		containableElements (
			PrimitiveInputPort[2,*]
		)
	}
}