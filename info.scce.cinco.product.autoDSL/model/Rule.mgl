import "platform:/resource/info.scce.cinco.product.autoDSL/model/SharedMemory.mgl" as mem

@primeviewer
@style("model/Rule.style")
@mcam("check")
@mcam_checkmodule("info.scce.cinco.product.autoDSL.check.ruleCheck.CheckRuleForCycles")
@mcam_checkmodule("info.scce.cinco.product.autoDSL.check.ruleCheck.CheckForUnreachableOperations")
@mcam_checkmodule("info.scce.cinco.product.autoDSL.check.ruleCheck.CheckStart")
@mcam_checkmodule("info.scce.cinco.product.autoDSL.check.ruleCheck.CheckRuleType")
@mcam_checkmodule("info.scce.cinco.product.autoDSL.check.ruleCheck.CheckSubRuleUpdate")
@mcam_checkmodule("info.scce.cinco.product.autoDSL.check.ruleCheck.CheckSubRuleIOIdentifiers")
@mcam_checkmodule("info.scce.cinco.product.autoDSL.check.ruleCheck.CheckEqualSubRulePorts")
@mcam_checkmodule("info.scce.cinco.product.autoDSL.check.ruleCheck.CheckForSingleOutputOnProgrammableNode")
@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateRule")
graphModel Rule {
	package info.scce.cinco.product.autoDSL.rule
	nsURI "http://cinco.scce.info/product/rule"
	diagramExtension "rule"
	
	containableElements(
		Operation[1,*],
		SubRuleInputs[0,1],
		SubRuleOutputs[0,*],
		Comment[0,*],
		Save[0,*],
		Load[0,*],
		StartNode[1,1],
		EndNode[1,*]
	)
	
	@readOnly
	attr EString as name
	
	@style(controlFlow)
	edge StartEdge
	
	@style(controlFlow)
	edge EndEdge
	
	abstract container Save extends Operation {}
	
	@style(commutableOperation, "Save: ${data.label}")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateOperation")
	@postResize("info.scce.cinco.product.autoDSL.hooks.ResizeOperation")
	container SaveBoolean extends Save{
		@pvLabel(label)
		@pvFileExtension("sharedMemory")
		prime mem::StoredBoolean as data
		containableElements(BooleanInput[1,1],BooleanOutput[0,0], NumberInput[0,0], NumberOutput[0,0])
		
	}
	
	@style(commutableOperation, "Save: ${data.label}")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateOperation")
	@postResize("info.scce.cinco.product.autoDSL.hooks.ResizeOperation")
	container SaveNumber extends Save{
		@pvLabel(label)
		@pvFileExtension("sharedMemory")
		prime mem::StoredNumber as data
		containableElements(BooleanInput[0,0],BooleanOutput[0,0], NumberInput[1,1], NumberOutput[0,0])
	}
	
	abstract container Load extends Operation {}
	
	@style(commutableOperation, "Load: ${data.label}")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateOperation")
	@postResize("info.scce.cinco.product.autoDSL.hooks.ResizeOperation")
	container LoadBoolean extends Load{
		@pvLabel(label)
		@pvFileExtension("sharedMemory")
		prime mem::StoredBoolean as data
		containableElements(BooleanInput[0,0],BooleanOutput[1,1], NumberInput[0,0], NumberOutput[0,0])
	}
	
	@style(commutableOperation, "Load: ${data.label}")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateOperation")
	@postResize("info.scce.cinco.product.autoDSL.hooks.ResizeOperation")
	container LoadNumber extends Load{
		@pvLabel(label)
		@pvFileExtension("sharedMemory")
		prime mem::StoredNumber as data 
		containableElements(BooleanInput[0,0],BooleanOutput[0,0], NumberInput[0,0], NumberOutput[1,1])
	}
	
	
	@style(commutableOperation, "${label}")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateSubRule")
	@postResize("info.scce.cinco.product.autoDSL.hooks.ResizeOperation")
	@doubleClickAction("info.scce.cinco.product.autoDSL.hooks.OpenSubRuleModel")
	container SubRule extends CommutableOperation {
		@pvFileExtension("rule")
		prime this::Rule as rule
		attr EString as label
		containableElements(
			BooleanCarInput[0,0], BooleanInputPort[0,0], BooleanStaticInput[0,0], NumberCarInput[0,0], NumberInputPort[0,0], NumberStaticInput[0,0],
			BooleanSubInput[0,*], NumberSubInput[0,*], BooleanSubOutputPort[0,*], NumberSubOutputPort[0,*], 
			BooleanCarOutput[0,0], BooleanOutputPort[0,0], NumberCarOutput[0,0], NumberOutputPort[0,0]
		)
	}
	
	abstract edge ControlFlow {}
	
	@style (controlFlow)
	edge ControlFlowBasic extends ControlFlow {}
	
	@style(labeledControlFlow, "True")
	edge ControlFlowDecisionTrue extends ControlFlow {}
	
	@style(labeledControlFlow, "False")
	edge ControlFlowDecisionFalse extends ControlFlow {}
		
	@style(dataFlow)
	edge BooleanDataFlow {}
	
	@style(dataFlow)
	edge NumberDataFlow {}

	enum CarInputTypeBoolean {
		SystemOnButton
		SystemActiveButton
		HasLeadingCar
		HasEngineError
		HasSteeringError
		HasGearboxError
		DecrementSetDistanceButton
		IncrementSetDistanceButton
		DecrementSetSpeedButton
		IncrementSetSpeedButton
	}

	enum CarInputTypeNumber{
		DistanceFront
		DistanceRear
		TimeDistanceFront
		CurrentSpeed
		PhysicalAcceleration
		Steering
		LeadingCarRelativeSpeed
		InputThrottle // GamepadThrottle
		InputBrake // GamepadBrake
		dTime
	}

	enum CarOutputTypeBoolean {
		HeadlightsOn // for display purpose only
		ObstacleDetectedWarning // for display purpose only
		ErrorWarning // for display purpose only
		SystemOn // for display purpose only
		SystemActive // for display purpose only
	}

	enum CarOutputTypeNumber {
		Throttle
		Brake
		Steering

		SetSpeed // for display purpose only
		SetDistance // for display purpose only
	}
	

	abstract node IO {
		attr EBoolean as logged 
	}
	abstract node Input extends IO {}
	abstract node BooleanInput extends Input {}
	abstract node NumberInput extends Input {}
	
	abstract node Output extends IO {}
	abstract node BooleanOutput extends Output {}
	abstract node NumberOutput extends Output {}
	
	abstract container Operation {
		incomingEdges(ControlFlow[0,*])
		outgoingEdges(ControlFlowBasic[0,1])
		containableElements(Input[0,*], Output[0,*]) 
	}
   
	abstract container CommutableOperation extends Operation {}
	abstract container NonCommutableOperation extends Operation {} 

	//arithmetische  Operationen Start
	@style(commutableOperation, "+")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateOperation")
	@postResize("info.scce.cinco.product.autoDSL.hooks.ResizeOperation")
	@palette("Arithmetische Operationen")
	container Addition extends CommutableOperation {
		containableElements(
			BooleanInput[0,0], NumberInput[1,*],
			BooleanSubInput[0,0], NumberSubInput[0,0], BooleanSubOutputPort[0,0], NumberSubOutputPort[0,0],
			BooleanOutput[0,0], NumberOutput[1,1]
		)
	}
	
	@style(nonCommutableOperation, "รท")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateOperation")
	@postResize("info.scce.cinco.product.autoDSL.hooks.ResizeOperation")
	@palette("Arithmetische Operationen")
	container Division extends NonCommutableOperation {
		containableElements(
			BooleanInput[0,0], NumberInput[2,2],
			BooleanSubInput[0,0], NumberSubInput[0,0], BooleanSubOutputPort[0,0], NumberSubOutputPort[0,0],
			BooleanOutput[0,0], NumberOutput[1,1]
		)
	}
	
	@style(nonCommutableOperation, "^")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateOperation")
	@postResize("info.scce.cinco.product.autoDSL.hooks.ResizeOperation")
	@palette("Arithmetische Operationen")
	container Exponential extends NonCommutableOperation {
		containableElements(
			BooleanInput[0,0], NumberInput[2,2],
			BooleanSubInput[0,0], NumberSubInput[0,0], BooleanSubOutputPort[0,0], NumberSubOutputPort[0,0],
			BooleanOutput[0,0], NumberOutput[1,1]
		)
	}
	
	@style(commutableOperation, "max")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateOperation")
	@postResize("info.scce.cinco.product.autoDSL.hooks.ResizeOperation")
	@palette("Arithmetische Operationen")
	container Maximum extends CommutableOperation {
		containableElements(
			BooleanInput[0,0], NumberInput[1,*],
			BooleanSubInput[0,0], NumberSubInput[0,0], BooleanSubOutputPort[0,0], NumberSubOutputPort[0,0],
			BooleanOutput[0,0], NumberOutput[1,1]
		)
	}
	
	@style(commutableOperation, "min")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateOperation")
	@postResize("info.scce.cinco.product.autoDSL.hooks.ResizeOperation")
	@palette("Arithmetische Operationen")
	container Minimum extends CommutableOperation {
		containableElements(
			BooleanInput[0,0], NumberInput[1,*],
			BooleanSubInput[0,0], NumberSubInput[0,0], BooleanSubOutputPort[0,0], NumberSubOutputPort[0,0],
			BooleanOutput[0,0], NumberOutput[1,1]
		)
	}
	
	@style(commutableOperation, "ร")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateOperation")
	@postResize("info.scce.cinco.product.autoDSL.hooks.ResizeOperation")
	@palette("Arithmetische Operationen")
	container Multiplication extends CommutableOperation {
		containableElements(
			BooleanInput[0,0], NumberInput[1,*],
			BooleanSubInput[0,0], NumberSubInput[0,0], BooleanSubOutputPort[0,0], NumberSubOutputPort[0,0],
			BooleanOutput[0,0], NumberOutput[1,1]
		)		
	}

	@style(nonCommutableOperation, "-")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateOperation")
	@postResize("info.scce.cinco.product.autoDSL.hooks.ResizeOperation")
	@palette("Arithmetische Operationen")
	container Subtraction extends NonCommutableOperation {
		containableElements(
			BooleanInput[0,0], NumberInput[2,2],
			BooleanSubInput[0,0], NumberSubInput[0,0], BooleanSubOutputPort[0,0], NumberSubOutputPort[0,0],
			BooleanOutput[0,0], NumberOutput[1,1]
		)
	}
	//Arithmetische Operationen Ende
	
	//DirectIO Start
	@style(commutableOperation, "Output")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateOperation")
	@postResize("info.scce.cinco.product.autoDSL.hooks.ResizeOperation")
	@palette("DirectIO")
	container DirectBooleanOutput extends Operation {
		containableElements(
			BooleanInput[1,1], NumberInput[0,0],
			BooleanSubInput[0,0], NumberSubInput[0,0], BooleanSubOutputPort[0,0], NumberSubOutputPort[0,0],
			BooleanCarOutput[1,1], BooleanOutputPort[0,0], NumberOutput[0,0]
		)
	}
	
	@style(commutableOperation, "Output")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateOperation")
	@postResize("info.scce.cinco.product.autoDSL.hooks.ResizeOperation")
	@palette("DirectIO")
	container DirectNumberOutput extends Operation {
		containableElements(
			BooleanInput[0,0], NumberInput[1,1],
			BooleanSubInput[0,0], NumberSubInput[0,0], BooleanSubOutputPort[0,0], NumberSubOutputPort[0,0],
			BooleanOutput[0,0], NumberCarOutput[1,1], NumberOutputPort[0,0]
		)
	}
	//DirectIO Ende
	
	//Logische Operationen Start
	
	@style(commutableOperation, "?")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateOperation")
	@postResize("info.scce.cinco.product.autoDSL.hooks.ResizeOperation")
	@palette("Logische Operationen")
	container Decision extends Operation {
		outgoingEdges(ControlFlowDecisionFalse[1,1], ControlFlowDecisionTrue[1,1], ControlFlowBasic[0,0])
		containableElements(
			BooleanInput[1,1], NumberInput[0,0],
			BooleanSubInput[0,0], NumberSubInput[0,0], BooleanSubOutputPort[0,0], NumberSubOutputPort[0,0],
			BooleanOutput[0,0], NumberOutput[0,0]
		)
	}
	
	@style(nonCommutableOperation, "=")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateOperation")
	@postResize("info.scce.cinco.product.autoDSL.hooks.ResizeOperation")
	@palette("Logische Operationen")
	container Equal extends NonCommutableOperation {
		containableElements(
			BooleanInput[0,0], NumberInput[2,2],
			BooleanSubInput[0,0], NumberSubInput[0,0], BooleanSubOutputPort[0,0], NumberSubOutputPort[0,0],
			BooleanOutput[1,1], NumberOutput[0,0]
		)
	}
	
	@style(nonCommutableOperation, "<")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateOperation")
	@postResize("info.scce.cinco.product.autoDSL.hooks.ResizeOperation")
	@palette("Logische Operationen")
	container Less extends NonCommutableOperation {
		containableElements(
			BooleanInput[0,0], NumberInput[2,2],
			BooleanSubInput[0,0], NumberSubInput[0,0], BooleanSubOutputPort[0,0], NumberSubOutputPort[0,0],
			BooleanOutput[1,1], NumberOutput[0,0]
		)
	}
	
	@style(nonCommutableOperation, ">")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateOperation")
	@postResize("info.scce.cinco.product.autoDSL.hooks.ResizeOperation")
	@palette("Logische Operationen")
	container Greater extends NonCommutableOperation {
		containableElements(
			BooleanInput[0,0], NumberInput[2,2],
			BooleanSubInput[0,0], NumberSubInput[0,0], BooleanSubOutputPort[0,0], NumberSubOutputPort[0,0],
			BooleanOutput[1,1], NumberOutput[0,0]
		)
	}
	
	@style(nonCommutableOperation, "โฅ")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateOperation")
	@postResize("info.scce.cinco.product.autoDSL.hooks.ResizeOperation")
	@palette("Logische Operationen")
	container GreaterOrEqual extends NonCommutableOperation {
		containableElements(
			BooleanInput[0,0], NumberInput[2,2],
			BooleanSubInput[0,0], NumberSubInput[0,0], BooleanSubOutputPort[0,0], NumberSubOutputPort[0,0],
			BooleanOutput[1,1], NumberOutput[0,0]
		)
	}
	
	@style(nonCommutableOperation, "โค")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateOperation")
	@postResize("info.scce.cinco.product.autoDSL.hooks.ResizeOperation")
	@palette("Logische Operationen")
	container LessOrEqual extends NonCommutableOperation {
		containableElements(
			BooleanInput[0,0], NumberInput[2,2],
			BooleanSubInput[0,0], NumberSubInput[0,0], BooleanSubOutputPort[0,0], NumberSubOutputPort[0,0],
			BooleanOutput[1,1], NumberOutput[0,0]
		)
	}
	
	@style(commutableOperation, "โง")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateOperation")
	@postResize("info.scce.cinco.product.autoDSL.hooks.ResizeOperation")
	@palette("Logische Operationen")
	container LogicalAnd extends CommutableOperation {
		containableElements(
			BooleanInput[1,*], NumberInput[0,0],
			BooleanSubInput[0,0], NumberSubInput[0,0], BooleanSubOutputPort[0,0], NumberSubOutputPort[0,0],
			BooleanOutput[1,1], NumberOutput[0,0]
		)
	}
	
	@style(commutableOperation, "โจ")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateOperation")
	@postResize("info.scce.cinco.product.autoDSL.hooks.ResizeOperation")
	@palette("Logische Operationen")
	container LogicalOr extends CommutableOperation {
		containableElements(
			BooleanInput[1,*], NumberInput[0,0],
			BooleanSubInput[0,0], NumberSubInput[0,0], BooleanSubOutputPort[0,0], NumberSubOutputPort[0,0],
			BooleanOutput[1,1], NumberOutput[0,0]
		)
	}
	
	@style(commutableOperation, "ยฌ")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateOperation")
	@postResize("info.scce.cinco.product.autoDSL.hooks.ResizeOperation")
	@palette("Logische Operationen")
	container Negation extends Operation {
		containableElements(
			BooleanInput[1,1], NumberInput[0,0],
			BooleanSubInput[0,0], NumberSubInput[0,0], BooleanSubOutputPort[0,0], NumberSubOutputPort[0,0],
			BooleanOutput[1,1], NumberOutput[0,0]
		)
	}
	//Logische Operationen Ende
	
	//Ports Start
	@style(input, "", "${inputtype}", "Boolean")
	@icon("icons/CarInput.png")
	@disable(move,resize)
	@palette("Ports")
	@contextMenuAction("info.scce.cinco.product.autoDSL.hooks.ToPort")
	@contextMenuAction("info.scce.cinco.product.autoDSL.hooks.ToStatic")
	@doubleClickAction("info.scce.cinco.product.autoDSL.hooks.ToStatic")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateIO")
	@preDelete("info.scce.cinco.product.autoDSL.hooks.DeleteIO")
	node BooleanCarInput extends BooleanInput {
		attr CarInputTypeBoolean as inputtype
	}
	
	@style(output, "${outputtype}", "Boolean")
	@disable(move,resize)
	@icon("icons/CarOutput.png")
	@palette("Ports")
	@contextMenuAction("info.scce.cinco.product.autoDSL.hooks.ToPort")
	@doubleClickAction("info.scce.cinco.product.autoDSL.hooks.ToPort")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateIO")
	@preDelete("info.scce.cinco.product.autoDSL.hooks.DeleteIO")
	node BooleanCarOutput extends BooleanOutput {
		attr CarOutputTypeBoolean as outputtype
	}
	
	@style(input, "", "", "Boolean")
	@disable(move,resize)
	@palette("Ports")
	@icon("icons/inputPort.png")
	@contextMenuAction("info.scce.cinco.product.autoDSL.hooks.ToStatic")
	@contextMenuAction("info.scce.cinco.product.autoDSL.hooks.ToCar")
	@doubleClickAction("info.scce.cinco.product.autoDSL.hooks.ToCar")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateIO")
	@preDelete("info.scce.cinco.product.autoDSL.hooks.DeleteIO")
	node BooleanInputPort extends BooleanInput {
		incomingEdges(BooleanDataFlow[1,1])
	}
	
	@style(output, "", "Boolean")
	@disable(move,resize)
	@icon("icons/outputPort.png")
	@palette("Ports")
	@contextMenuAction("info.scce.cinco.product.autoDSL.hooks.ToCar")
	@doubleClickAction("info.scce.cinco.product.autoDSL.hooks.ToCar")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateIO")
	@preDelete("info.scce.cinco.product.autoDSL.hooks.DeleteIO")
	node BooleanOutputPort extends BooleanOutput {
		outgoingEdges(BooleanDataFlow[1,*])
	}
	
	@style(input, "", "${staticValue}", "Boolean")
	@disable(move,resize)
	@palette("Ports")
	@icon("icons/StaticInput.png")
	@contextMenuAction("info.scce.cinco.product.autoDSL.hooks.ToCar")
	@contextMenuAction("info.scce.cinco.product.autoDSL.hooks.ToPort")
	@doubleClickAction("info.scce.cinco.product.autoDSL.hooks.ToPort")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateIO")
	@preDelete("info.scce.cinco.product.autoDSL.hooks.DeleteIO")
	node BooleanStaticInput extends BooleanInput {
		attr EBoolean as staticValue
	}
	
	@style(input, "", "${inputtype}", "Number")
	@icon("icons/CarInput.png")
	@disable(move,resize)
	@palette("Ports")
	@contextMenuAction("info.scce.cinco.product.autoDSL.hooks.ToPort")
	@contextMenuAction("info.scce.cinco.product.autoDSL.hooks.ToStatic")
	@doubleClickAction("info.scce.cinco.product.autoDSL.hooks.ToStatic")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateIO")
	@preDelete("info.scce.cinco.product.autoDSL.hooks.DeleteIO")
	node NumberCarInput extends NumberInput {
		attr CarInputTypeNumber as inputtype
	}
	
	@style(output, "${outputtype}", "Number")
	@disable(move,resize)
	@icon("icons/CarOutput.png")
	@palette("Ports")
	@contextMenuAction("info.scce.cinco.product.autoDSL.hooks.ToPort")
	@doubleClickAction("info.scce.cinco.product.autoDSL.hooks.ToPort")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateIO")
	@preDelete("info.scce.cinco.product.autoDSL.hooks.DeleteIO")
	node NumberCarOutput extends NumberOutput {
		attr CarOutputTypeNumber as outputtype
	}
		
	@style(input, "", "", "Number")
	@disable(move,resize)
	@palette("Ports")
	@icon("icons/inputPort.png")
	@contextMenuAction("info.scce.cinco.product.autoDSL.hooks.ToStatic")
	@contextMenuAction("info.scce.cinco.product.autoDSL.hooks.ToCar")
	@doubleClickAction("info.scce.cinco.product.autoDSL.hooks.ToCar")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateIO")
	@preDelete("info.scce.cinco.product.autoDSL.hooks.DeleteIO")
	node NumberInputPort extends NumberInput {
		incomingEdges(NumberDataFlow[1,1])
	}

	@style(output, "", "Number")
	@disable(move,resize)
	@icon("icons/outputPort.png")
	@palette("Ports")
	@contextMenuAction("info.scce.cinco.product.autoDSL.hooks.ToCar")
	@doubleClickAction("info.scce.cinco.product.autoDSL.hooks.ToCar")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateIO")
	@preDelete("info.scce.cinco.product.autoDSL.hooks.DeleteIO")
	node NumberOutputPort extends NumberOutput {
		outgoingEdges(NumberDataFlow[1,*])
	}
	
	@style(input, "", "${staticValue}", "Number")
	@disable(move,resize)
	@palette("Ports")
	@icon("icons/StaticInput.png")
	@contextMenuAction("info.scce.cinco.product.autoDSL.hooks.ToCar")
	@contextMenuAction("info.scce.cinco.product.autoDSL.hooks.ToPort")
	@doubleClickAction("info.scce.cinco.product.autoDSL.hooks.ToPort")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateIO")
	@preDelete("info.scce.cinco.product.autoDSL.hooks.DeleteIO")
	node NumberStaticInput extends NumberInput {
		attr EFloat as staticValue
	}
	//Ports Ende
	
	//Sonstiges Start
	@style(commutableOperation, "Guard")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateOperation")
	@postResize("info.scce.cinco.product.autoDSL.hooks.ResizeOperation")
	@palette("Sonstiges")
	container BooleanGuardOutput extends Operation {
		outgoingEdges(ControlFlowBasic[0,0], EndEdge[1,1])
		containableElements(
			BooleanInput[1,1], NumberInput[0,0],
			BooleanSubInput[0,0], NumberSubInput[0,0], BooleanSubOutputPort[0,0], NumberSubOutputPort[0,0],
			BooleanOutput[0,0], NumberOutput[0,0]
		)
	}
	
	@style(comment, "${comment}")
	@palette("Sonstiges")
	node Comment {
		@multiLine
		attr EString as comment := ""
	}
	
	@style(startEndNode, "End")
	@palette("Sonstiges")
	node EndNode{
		incomingEdges(ControlFlow[0,*], EndEdge[0,*])
	}
	
	@style(pid, "${p}", "${i}","${d}")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateOperation")
	@postResize("info.scce.cinco.product.autoDSL.hooks.ResizeOperation")
	@palette("Sonstiges")
	container PIDController extends Operation {
		attr EDouble as p
		attr EDouble as i
		attr EDouble as d
		containableElements(
			BooleanInput[0,0], NumberInput[2,2],
			BooleanSubInput[0,0], NumberSubInput[0,0], BooleanSubOutputPort[0,0], NumberSubOutputPort[0,0],
			BooleanOutput[0,0], NumberOutput[1,1]
		)
	}
	
	@style(codeNode, "Code")
	@palette("Sonstiges")
	container ProgrammableNode extends Operation{
		@multiLine
		attr EString as code
		containableElements(
			BooleanInput[0,*], NumberInput[0,*],
			BooleanSubInput[0,0], NumberSubInput[0,0], BooleanSubOutputPort[0,0], NumberSubOutputPort[0,0],
			BooleanOutput[0,1], NumberOutput[0,1]
		)
	}
	
	@style(startEndNode, "Start")
	@palette("Sonstiges")
	node StartNode{
		outgoingEdges(ControlFlowBasic[0,1], StartEdge[0,1])
	}
	
	@style(commutableOperation, "${name}")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateOperation")
	@postResize("info.scce.cinco.product.autoDSL.hooks.ResizeOperation")
	@palette("Sonstiges")
	container StaticNumberValue extends Operation {
		attr EString as name := ""
		containableElements(
			BooleanInput[0,0], NumberCarInput[0,0], NumberInputPort[0,0], NumberStaticInput[1,1],
			BooleanSubInput[0,0], NumberSubInput[0,0], BooleanSubOutputPort[0,0], NumberSubOutputPort[0,0], 
			BooleanOutput[0,0], NumberCarOutput[0,0], NumberOutputPort[1,1]
		)
	}
	
	//Sonstiges Ende
	
	@style(storedPID, "${data.p}", "${data.i}","${data.d}", "${data.label}")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateOperation")
	@postResize("info.scce.cinco.product.autoDSL.hooks.ResizeOperation")
	container StoredPIDController extends Operation{
		@pvLabel(label)
		@pvFileExtension("sharedMemory")
		prime mem::StoredPIDController as data
		containableElements(
			BooleanInput[0,0], NumberInput[2,2],
			BooleanSubInput[0,0], NumberSubInput[0,0], BooleanSubOutputPort[0,0], NumberSubOutputPort[0,0],
			BooleanOutput[0,0], NumberOutput[1,1]
		)
	}
	
	//SubRuleIO Start
	@style(commutableOperation, "Inputs")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateOperation")
	@postResize("info.scce.cinco.product.autoDSL.hooks.ResizeOperation")
	@contextMenuAction("info.scce.cinco.product.autoDSL.hooks.AddNumberSubOutput")
	@contextMenuAction("info.scce.cinco.product.autoDSL.hooks.AddBooleanSubOutput")
	@palette("SubRuleIO")
	container SubRuleInputs extends CommutableOperation {
		incomingEdges(ControlFlow[0,0], StartEdge[1,1])
		containableElements(
			BooleanInput[0,0], NumberInput[0,0],
			BooleanSubOutputPort[0,*], NumberSubOutputPort[0,*],
			BooleanCarOutput[0,0], BooleanOutputPort[0,0], NumberCarOutput[0,0], NumberOutputPort[0,0]
		)
	}
	
	@style(commutableOperation, "Outputs")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateOperation")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateSubRuleOutputs")
	@postResize("info.scce.cinco.product.autoDSL.hooks.ResizeOperation")
	@contextMenuAction("info.scce.cinco.product.autoDSL.hooks.AddNumberSubInput")
	@contextMenuAction("info.scce.cinco.product.autoDSL.hooks.AddBooleanSubInput")
	@preDelete("info.scce.cinco.product.autoDSL.hooks.DeleteSubRuleOutputs")
	@palette("SubRuleIO")
	container SubRuleOutputs extends CommutableOperation {
		outgoingEdges(ControlFlowBasic[0,0], EndEdge[1,1])
		containableElements(
			BooleanCarInput[0,0], BooleanInputPort[0,0], BooleanStaticInput[0,0], NumberCarInput[0,0], NumberInputPort[0,0], NumberStaticInput[0,0],
			BooleanSubInput[0,*], NumberSubInput[0,*], 
			BooleanOutput[0,0], NumberOutput[0,0]
		)
	}	
	//SubRuleIO End
	
	//SubRulePorts Start
	
	abstract node BooleanSubInput extends BooleanInput {
		attr EString as identifier
	}
	
	abstract node NumberSubInput extends NumberInput {
		attr EString as identifier
	}
	
	@style(input, "${identifier}", "", "Boolean")
	@disable(move,resize)
	@palette("SubRulePorts")
	@icon("icons/inputPort.png")
	@contextMenuAction("info.scce.cinco.product.autoDSL.hooks.ToStatic")
	@contextMenuAction("info.scce.cinco.product.autoDSL.hooks.ToCar")
	@doubleClickAction("info.scce.cinco.product.autoDSL.hooks.ToCar")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateIO")
	@preDelete("info.scce.cinco.product.autoDSL.hooks.DeleteIO")
	@postAttributeValueChange("info.scce.cinco.product.autoDSL.hooks.UpdateSubRuleOutputs")
	node BooleanSubInputPort extends BooleanSubInput {
		incomingEdges(BooleanDataFlow[1,1])
	}
	
	@style(input, "${identifier}", "${inputtype}", "Boolean")
	@disable(move,resize)
	@palette("SubRulePorts")
	@icon("icons/CarInput.png")
	@contextMenuAction("info.scce.cinco.product.autoDSL.hooks.ToPort")
	@contextMenuAction("info.scce.cinco.product.autoDSL.hooks.ToStatic")
	@doubleClickAction("info.scce.cinco.product.autoDSL.hooks.ToStatic")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateIO")
	@preDelete("info.scce.cinco.product.autoDSL.hooks.DeleteIO")
	@postAttributeValueChange("info.scce.cinco.product.autoDSL.hooks.UpdateSubRuleOutputs")
	node BooleanSubCarInput extends BooleanSubInput {
		attr CarInputTypeBoolean as inputtype
	}
	
	@style(output, "${identifier}", "Boolean")
	@disable(move,resize)
	@palette("SubRulePorts")
	@icon("icons/outputPort.png")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateIO")
	@preDelete("info.scce.cinco.product.autoDSL.hooks.DeleteIO")
	node BooleanSubOutputPort extends BooleanOutput {
		attr EString as identifier
		outgoingEdges(BooleanDataFlow[0,*])
	}
	
	@style(input, "${identifier}", "${staticValue}", "Boolean")
	@disable(move,resize)
	@palette("SubRulePorts")
	@icon("icons/StaticInput.png")
	@contextMenuAction("info.scce.cinco.product.autoDSL.hooks.ToCar")
	@contextMenuAction("info.scce.cinco.product.autoDSL.hooks.ToPort")
	@doubleClickAction("info.scce.cinco.product.autoDSL.hooks.ToPort")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateIO")
	@preDelete("info.scce.cinco.product.autoDSL.hooks.DeleteIO")
	@postAttributeValueChange("info.scce.cinco.product.autoDSL.hooks.UpdateSubRuleOutputs")
	node BooleanSubStaticInput extends BooleanSubInput {
		attr EBoolean as staticValue
	}
	
	@style(input, "${identifier}", "", "Number")
	@disable(move,resize)
	@palette("SubRulePorts")
	@icon("icons/inputPort.png")
	@contextMenuAction("info.scce.cinco.product.autoDSL.hooks.ToStatic")
	@contextMenuAction("info.scce.cinco.product.autoDSL.hooks.ToCar")
	@doubleClickAction("info.scce.cinco.product.autoDSL.hooks.ToCar")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateIO")
	@preDelete("info.scce.cinco.product.autoDSL.hooks.DeleteIO")
	@postAttributeValueChange("info.scce.cinco.product.autoDSL.hooks.UpdateSubRuleOutputs")
	node NumberSubInputPort extends NumberSubInput {
		incomingEdges(NumberDataFlow[1,1])
	}
	
	@style(input, "${identifier}", "${inputtype}", "Number")
	@disable(move,resize)
	@palette("SubRulePorts")
	@icon("icons/CarInput.png")
	@contextMenuAction("info.scce.cinco.product.autoDSL.hooks.ToPort")
	@contextMenuAction("info.scce.cinco.product.autoDSL.hooks.ToStatic")
	@doubleClickAction("info.scce.cinco.product.autoDSL.hooks.ToStatic")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateIO")
	@preDelete("info.scce.cinco.product.autoDSL.hooks.DeleteIO")
	@postAttributeValueChange("info.scce.cinco.product.autoDSL.hooks.UpdateSubRuleOutputs")
	node NumberSubCarInput extends NumberSubInput {
		attr CarInputTypeNumber as inputtype
	}
	
	@style(output, "${identifier}", "Number")
	@disable(move,resize)
	@palette("SubRulePorts")
	@icon("icons/outputPort.png")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateIO")
	@preDelete("info.scce.cinco.product.autoDSL.hooks.DeleteIO")
	node NumberSubOutputPort extends NumberOutput {
		attr EString as identifier
		outgoingEdges(NumberDataFlow[0,*])
	}
	
	@style(input, "${identifier}", "${staticValue}", "Number")
	@disable(move,resize)
	@palette("SubRulePorts")
	@icon("icons/StaticInput.png")
	@contextMenuAction("info.scce.cinco.product.autoDSL.hooks.ToCar")
	@contextMenuAction("info.scce.cinco.product.autoDSL.hooks.ToPort")
	@doubleClickAction("info.scce.cinco.product.autoDSL.hooks.ToPort")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateIO")
	@preDelete("info.scce.cinco.product.autoDSL.hooks.DeleteIO")
	@postAttributeValueChange("info.scce.cinco.product.autoDSL.hooks.UpdateSubRuleOutputs")
	node NumberSubStaticInput extends NumberSubInput {
		attr EBoolean as staticValue
	}
	//SubRulePorts Ende
}
