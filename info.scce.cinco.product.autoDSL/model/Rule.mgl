@primeviewer
@style("model/Rule.style")
@mcam("check")
//@mcam_checkmodule("info.scce.cinco.product.autoDSL.check.ruleCheck.CheckRuleForCycles")
//@mcam_checkmodule("info.scce.cinco.product.autoDSL.check.ruleCheck.CheckForUnreachableOperations")
graphModel Rule {
	package info.scce.cinco.product.autoDSL.rule
	nsURI "http://cinco.scce.info/product/rule"
	diagramExtension "rule"
	
	containableElements(
		Operation[0,*],
		Comment[0,*]
	)
	
	attr EString as name
	
	abstract edge ControlFlow {}
	
	@style (controlFlow)
	edge ControlFlowBasic extends ControlFlow {}
	
	@style(labeledControlFlow, "True")
	edge ControlFlowDecisionTrue extends ControlFlow {}
	
	@style(labeledControlFlow, "False")
	edge ControlFlowDecisionFalse extends ControlFlow {}
		
	@style(dataFlow)
	edge BooleanDataFlow {}
	
	@style(dataFlow)
	edge NumberDataFlow {}

	enum CarInputTypeBoolean {
		GamepadA
		GamepadB
		GamepadX
		GamepadY
		GamepadLB
		GamepadRB
		GamepadBACK
		GamepadSTART
		GamepadXBOX
		GamepadLStickPressed
		GamepadRStickPressed
		GamepadDpadLeft
		GamepadDpadRight
		GamepadDpadUp
		GamepadDpadDown
	}

	enum CarInputTypeNumber{
		DistanceFront
		DistanceRear
		TimeDistanceFront
		CurrentSpeed

		GamepadSteering
		GamepadThrottle
		SetSpeed
	}

	enum CarOutputTypeBoolean {
		Scheinwerfer_An
	}

	enum CarOutputTypeNumber {
		Acceleration
		Steering

		GamepadFeedbackX
		GamepadFeedbackY
	}
	

	abstract node IO {}
	abstract node Input extends IO {}
	abstract node BooleanInput extends Input {}
	abstract node NumberInput extends Input {}
	
	abstract node Output extends IO {}
	abstract node BooleanOutput extends Output {}
	abstract node NumberOutput extends Output {}
	
	
	@style(carInput, "${inputtype}", "Boolean")
	@icon("icons/CarInput.png")
	@disable(move,resize)
	@palette("Ports")
//	@contextMenuAction("info.scce.cinco.product.autoDSL.hooks.ToPort")
//	@contextMenuAction("info.scce.cinco.product.autoDSL.hooks.ToStatic")
	@doubleClickAction("info.scce.cinco.product.autoDSL.hooks.ToStatic")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateIO")
	@preDelete("info.scce.cinco.product.autoDSL.hooks.DeleteIO")
	node BooleanCarInput extends BooleanInput {
		attr CarInputTypeBoolean as inputtype
	}
	
	@style(carInput, "${inputtype}", "Number")
	@icon("icons/CarInput.png")
	@disable(move,resize)
	@palette("Ports")
//	@contextMenuAction("info.scce.cinco.product.autoDSL.hooks.ToPort")
//	@contextMenuAction("info.scce.cinco.product.autoDSL.hooks.ToStatic")
	@doubleClickAction("info.scce.cinco.product.autoDSL.hooks.ToStatic")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateIO")
	@preDelete("info.scce.cinco.product.autoDSL.hooks.DeleteIO")
	node NumberCarInput extends NumberInput {
		attr CarInputTypeNumber as inputtype
	}
	
	@style(carOutput, "${outputtype}", "Boolean")
	@disable(move,resize)
	@icon("icons/CarOutput.png")
	@palette("Ports")
//	@contextMenuAction("info.scce.cinco.product.autoDSL.hooks.ToPort")
	@doubleClickAction("info.scce.cinco.product.autoDSL.hooks.ToPort")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateIO")
	@preDelete("info.scce.cinco.product.autoDSL.hooks.DeleteIO")
	node BooleanCarOutput extends BooleanOutput {
		attr CarOutputTypeBoolean as outputtype
	}
	
	@style(carOutput, "${outputtype}", "Number")
	@disable(move,resize)
	@icon("icons/CarOutput.png")
	@palette("Ports")
//	@contextMenuAction("info.scce.cinco.product.autoDSL.hooks.ToPort")
	@doubleClickAction("info.scce.cinco.product.autoDSL.hooks.ToPort")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateIO")
	@preDelete("info.scce.cinco.product.autoDSL.hooks.DeleteIO")
	node NumberCarOutput extends NumberOutput {
		attr CarOutputTypeNumber as outputtype
	}
		
	@style(inputPort, "Number")
	@disable(move,resize)
	@palette("Ports")
	@icon("icons/inputPort.png")
//	@contextMenuAction("info.scce.cinco.product.autoDSL.hooks.ToStatic")
//	@contextMenuAction("info.scce.cinco.product.autoDSL.hooks.ToCar")
	@doubleClickAction("info.scce.cinco.product.autoDSL.hooks.ToCar")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateIO")
	@preDelete("info.scce.cinco.product.autoDSL.hooks.DeleteIO")
	node NumberInputPort extends NumberInput {
		incomingEdges(NumberDataFlow[1,1])
	}

	@style(inputPort, "Boolean")
	@disable(move,resize)
	@palette("Ports")
	@icon("icons/inputPort.png")
//	@contextMenuAction("info.scce.cinco.product.autoDSL.hooks.ToStatic")
//	@contextMenuAction("info.scce.cinco.product.autoDSL.hooks.ToCar")
	@doubleClickAction("info.scce.cinco.product.autoDSL.hooks.ToCar")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateIO")
	@preDelete("info.scce.cinco.product.autoDSL.hooks.DeleteIO")
	node BooleanInputPort extends BooleanInput {
		incomingEdges(BooleanDataFlow[1,1])
	}
	
	@style(outputPort, "Boolean")
	@disable(move,resize)
	@icon("icons/outputPort.png")
	@palette("Ports")
//	@contextMenuAction("info.scce.cinco.product.autoDSL.hooks.ToCar")
	@doubleClickAction("info.scce.cinco.product.autoDSL.hooks.ToCar")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateIO")
	@preDelete("info.scce.cinco.product.autoDSL.hooks.DeleteIO")
	node BooleanOutputPort extends BooleanOutput {
		outgoingEdges(BooleanDataFlow[1,*])
	}

	@style(outputPort, "Number")
	@disable(move,resize)
	@icon("icons/outputPort.png")
	@palette("Ports")
//	@contextMenuAction("info.scce.cinco.product.autoDSL.hooks.ToCar")
	@doubleClickAction("info.scce.cinco.product.autoDSL.hooks.ToCar")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateIO")
	@preDelete("info.scce.cinco.product.autoDSL.hooks.DeleteIO")
	node NumberOutputPort extends NumberOutput {
		outgoingEdges(NumberDataFlow[1,*])
	}
	
	@style(staticInput, "${staticValue}", "Boolean")
	@disable(move,resize)
	@palette("Ports")
	@icon("icons/StaticInput.png")
//	@contextMenuAction("info.scce.cinco.product.autoDSL.hooks.ToCar")
//	@contextMenuAction("info.scce.cinco.product.autoDSL.hooks.ToPort")
	@doubleClickAction("info.scce.cinco.product.autoDSL.hooks.ToPort")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateIO")
	@preDelete("info.scce.cinco.product.autoDSL.hooks.DeleteIO")
	node BooleanStaticInput extends BooleanInput {
		attr EBoolean as staticValue
	}
	
	@style(staticInput, "${staticValue}", "Number")
	@disable(move,resize)
	@palette("Ports")
	@icon("icons/StaticInput.png")
//	@contextMenuAction("info.scce.cinco.product.autoDSL.hooks.ToCar")
//	@contextMenuAction("info.scce.cinco.product.autoDSL.hooks.ToPort")
	@doubleClickAction("info.scce.cinco.product.autoDSL.hooks.ToPort")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateIO")
	@preDelete("info.scce.cinco.product.autoDSL.hooks.DeleteIO")
	node NumberStaticInput extends NumberInput {
		attr EFloat as staticValue
	}
	
	abstract container Operation {
		incomingEdges(ControlFlow[1,*])
		outgoingEdges(ControlFlowBasic[0,1])
		containableElements(Input[1,*], Output[0,1]) 
	}
   
	abstract container CommutableOperation extends Operation {}
	abstract container NonCommutableOperation extends Operation {} 

	@style(commutableOperation, "+")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateOperation")
	@postResize("info.scce.cinco.product.autoDSL.hooks.ResizeOperation")
	container Addition extends CommutableOperation {
		containableElements(BooleanInput[0,0], NumberInput[1,*], BooleanOutput[0,0], NumberOutput[1,1])
	}
	
	@style(commutableOperation, "×")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateOperation")
	@postResize("info.scce.cinco.product.autoDSL.hooks.ResizeOperation")
	container Multiplication extends CommutableOperation {
		containableElements(BooleanInput[0,0], NumberInput[1,*], BooleanOutput[0,0], NumberOutput[1,1])		
	}

	@style(nonCommutableOperation, "-")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateOperation")
	@postResize("info.scce.cinco.product.autoDSL.hooks.ResizeOperation")
	container Subtraction extends NonCommutableOperation {
		containableElements(BooleanInput[0,0], NumberInput[2,2], BooleanOutput[0,0], NumberOutput[1,1])
	}
	
	@style(nonCommutableOperation, "÷")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateOperation")
	@postResize("info.scce.cinco.product.autoDSL.hooks.ResizeOperation")
	container Division extends NonCommutableOperation {
		containableElements(BooleanInput[0,0], NumberInput[2,2], BooleanOutput[0,0], NumberOutput[1,1])
	}
	
	@style(nonCommutableOperation, "<")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateOperation")
	@postResize("info.scce.cinco.product.autoDSL.hooks.ResizeOperation")
	container Less extends NonCommutableOperation {
		containableElements(BooleanInput[0,0], NumberInput[2,2], BooleanOutput[1,1], NumberOutput[0,0])
	}
	
	@style(nonCommutableOperation, "≤")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateOperation")
	@postResize("info.scce.cinco.product.autoDSL.hooks.ResizeOperation")
	container LessOrEqual extends NonCommutableOperation {
		containableElements(BooleanInput[0,0], NumberInput[2,2], BooleanOutput[1,1], NumberOutput[0,0])
	}
	
	@style(nonCommutableOperation, ">")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateOperation")
	@postResize("info.scce.cinco.product.autoDSL.hooks.ResizeOperation")
	container Greater extends NonCommutableOperation {
		containableElements(BooleanInput[0,0], NumberInput[2,2], BooleanOutput[1,1], NumberOutput[0,0])
	}
	
	@style(nonCommutableOperation, "≥")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateOperation")
	@postResize("info.scce.cinco.product.autoDSL.hooks.ResizeOperation")
	container GreaterOrEqual extends NonCommutableOperation {
		containableElements(BooleanInput[0,0], NumberInput[2,2], BooleanOutput[1,1], NumberOutput[0,0])
	}
	
	@style(commutableOperation, "max")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateOperation")
	@postResize("info.scce.cinco.product.autoDSL.hooks.ResizeOperation")
	container Maximum extends CommutableOperation {
		containableElements(BooleanInput[0,0], NumberInput[1,*], BooleanOutput[0,0], NumberOutput[1,1])
	}
	
	@style(commutableOperation, "min")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateOperation")
	@postResize("info.scce.cinco.product.autoDSL.hooks.ResizeOperation")
	container Minimum extends CommutableOperation {
		containableElements(BooleanInput[0,0], NumberInput[1,*], BooleanOutput[0,0], NumberOutput[1,1])
	}
	
	@style(commutableOperation, "∧")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateOperation")
	@postResize("info.scce.cinco.product.autoDSL.hooks.ResizeOperation")
	container LogicalAnd extends CommutableOperation {
		containableElements(BooleanInput[1,*], NumberInput[0,0], BooleanOutput[1,1], NumberOutput[0,0])
	}
	
	@style(commutableOperation, "∨")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateOperation")
	@postResize("info.scce.cinco.product.autoDSL.hooks.ResizeOperation")
	container LogicalOr extends CommutableOperation {
		containableElements(BooleanInput[1,*], NumberInput[0,0], BooleanOutput[1,1], NumberOutput[0,0])
	}
	
	@style(commutableOperation, "¬")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateOperation")
	@postResize("info.scce.cinco.product.autoDSL.hooks.ResizeOperation")
	container Negation extends Operation {
		containableElements(BooleanInput[1,1], NumberInput[0,0], BooleanOutput[1,1], NumberOutput[0,0])
	}
	
	@style(commutableOperation, "?")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateOperation")
	@postResize("info.scce.cinco.product.autoDSL.hooks.ResizeOperation")
	container Decision extends Operation {
		outgoingEdges(ControlFlowDecisionFalse[1,1], ControlFlowDecisionTrue[1,1], ControlFlowBasic[0,0])
		containableElements(BooleanInput[1,1], NumberInput[0,0], BooleanOutput[0,0], NumberOutput[0,0])
	}
	
	@style(comment, "${comment}")
	node Comment {
		@multiLine
		attr EString as comment := ""
	}

	@style(commutableOperation, "Output")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateOperation")
	@postResize("info.scce.cinco.product.autoDSL.hooks.ResizeOperation")
	container DirectBooleanOutput extends Operation {
		containableElements(BooleanInput[1,1], NumberInput[0,0], BooleanCarOutput[1,1], BooleanOutputPort[0,0], NumberOutput[0,0])
	}
	
	@style(commutableOperation, "Output")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateOperation")
	@postResize("info.scce.cinco.product.autoDSL.hooks.ResizeOperation")
	container DirectNumberOutput extends Operation {
		containableElements(BooleanInput[0,0], NumberInput[1,1], BooleanOutput[0,0], NumberCarOutput[1,1], NumberOutputPort[0,0])
	}
	
	@style(commutableOperation, "Guard")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateOperation")
	@postResize("info.scce.cinco.product.autoDSL.hooks.ResizeOperation")
	container BooleanGuardOutput extends Operation {
		outgoingEdges(*[0,0])
		containableElements(BooleanInput[1,1], NumberInput[0,0], BooleanOutput[0,0], NumberOutput[0,0])
	}
	
	@style(pid, "${p}", "${i}","${d}")
	@postCreate("info.scce.cinco.product.autoDSL.hooks.CreateOperation")
	@postResize("info.scce.cinco.product.autoDSL.hooks.ResizeOperation")
	container PIDController extends Operation {
		attr EDouble as p
		attr EDouble as i
		attr EDouble as d
		containableElements(BooleanInput[0,0], NumberInput[2,2], BooleanOutput[0,0], NumberOutput[1,1])
	}
}